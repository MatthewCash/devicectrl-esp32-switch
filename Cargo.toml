[package]
name = "devicectrl-esp32-switch"
version = "0.1.0"
edition = "2024"

[dependencies]
esp-backtrace = { version = "0.17.0", features = [
    "esp32c6",
    "exception-handler",
    "panic-handler",
    "defmt",
] }

esp-hal = { version = "1.0.0-rc.0", features = [
    "esp32c6",
    "defmt",
    "unstable",
] }
esp-alloc = { version = "0.8.0" }
embedded-io = "0.6.1"

embedded-io-async = "0.6.1"
embassy-net = { version = "0.7.0", features = [
    "proto-ipv4",
    "tcp",
    "medium-ethernet",
] }

devicectrl-common = { git = "https://github.com/matthewcash/devicectrl-common", features = ["esp32c6"] }
esp32-ecdsa = { git = "https://github.com/matthewcash/esp32-ecdsa", features = ["esp32c6"] }
anyhow = { version = "1.0.98", default-features = false }
esp-wifi = { version = "0.15.0", features = ["esp32c6", "wifi", "defmt"] }
heapless = { version = "0.8.0", default-features = false }
smoltcp = { version = "0.12.0", default-features = false, features = [
    "medium-ethernet",
    "proto-ipv4",
    "socket-raw",
    "socket-tcp",
] }
defmt = "1.0.1"
defmt-rtt = "1.0.0"
embassy-executor = { version = "0.7.0", features = [
    "task-arena-size-32768",
    "defmt",
] }
embassy-time = { version = "0.4.0", features = ["generic-queue-8"] }
esp-hal-embassy = { version = "0.9.0", features = ["esp32c6"] }
static_cell = { version = "2.1.1" }
critical-section = "1.2.0"
serde = { version = "1.0.219", default-features = false }
serde_derive = "1.0.219"
serdect = { version = "0.3.0", default-features = false }
p256 = { version = "0.13.2", default-features = false, features = ["pkcs8"] }
embassy-sync = { version = "0.7.2", features = ["defmt"] }
embassy-futures = { version = "0.1.2", features = ["defmt"] }

[profile.dev]
# Rust debug is too slow.
# For debug builds always builds with some optimization
opt-level = "s"

[profile.release]
codegen-units = 1        # LLVM can perform better optimizations using a single thread
debug = 2
debug-assertions = false
incremental = false
lto = 'fat'
opt-level = 's'
overflow-checks = false
